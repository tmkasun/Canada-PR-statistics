[{"/home/kasun/projects/Canada-PR-statistics/src/App.tsx":"1","/home/kasun/projects/Canada-PR-statistics/src/components/AppBar.tsx":"2","/home/kasun/projects/Canada-PR-statistics/src/components/BarChart.tsx":"3","/home/kasun/projects/Canada-PR-statistics/src/components/DiffViewer.tsx":"4","/home/kasun/projects/Canada-PR-statistics/src/components/LineChart.tsx":"5","/home/kasun/projects/Canada-PR-statistics/src/components/ProgramCard.tsx":"6","/home/kasun/projects/Canada-PR-statistics/src/components/Selector.tsx":"7","/home/kasun/projects/Canada-PR-statistics/src/components/Statistics.tsx":"8","/home/kasun/projects/Canada-PR-statistics/src/components/StatsCard.tsx":"9","/home/kasun/projects/Canada-PR-statistics/src/data/api.tsx":"10","/home/kasun/projects/Canada-PR-statistics/src/data/chartOptions.ts":"11","/home/kasun/projects/Canada-PR-statistics/src/data/consts.ts":"12","/home/kasun/projects/Canada-PR-statistics/src/data/mockData.ts":"13","/home/kasun/projects/Canada-PR-statistics/src/layouts/root.tsx":"14","/home/kasun/projects/Canada-PR-statistics/src/pages/_app.tsx":"15","/home/kasun/projects/Canada-PR-statistics/src/pages/index.tsx":"16","/home/kasun/projects/Canada-PR-statistics/src/pages/products/[productID].tsx":"17","/home/kasun/projects/Canada-PR-statistics/src/utils/utils.ts":"18"},{"size":1735,"mtime":1696296510754,"results":"19","hashOfConfig":"20"},{"size":3294,"mtime":1696351188216,"results":"21","hashOfConfig":"20"},{"size":1411,"mtime":1696158328076,"results":"22","hashOfConfig":"20"},{"size":1225,"mtime":1696346680976,"results":"23","hashOfConfig":"20"},{"size":1410,"mtime":1686259013346,"results":"24","hashOfConfig":"20"},{"size":2157,"mtime":1696351027286,"results":"25","hashOfConfig":"20"},{"size":4659,"mtime":1696351142206,"results":"26","hashOfConfig":"20"},{"size":10632,"mtime":1696351240206,"results":"27","hashOfConfig":"20"},{"size":1541,"mtime":1696349356636,"results":"28","hashOfConfig":"20"},{"size":1295,"mtime":1696267762499,"results":"29","hashOfConfig":"20"},{"size":1558,"mtime":1696267762499,"results":"30","hashOfConfig":"20"},{"size":1513,"mtime":1696267762499,"results":"31","hashOfConfig":"20"},{"size":388983,"mtime":1696267762499,"results":"32","hashOfConfig":"20"},{"size":500,"mtime":1696292729793,"results":"33","hashOfConfig":"20"},{"size":679,"mtime":1696292804683,"results":"34","hashOfConfig":"20"},{"size":1569,"mtime":1696351243996,"results":"35","hashOfConfig":"20"},{"size":8045,"mtime":1696296138734,"results":"36","hashOfConfig":"20"},{"size":92,"mtime":1696349191106,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hb6lxh",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kasun/projects/Canada-PR-statistics/src/App.tsx",[],[],"/home/kasun/projects/Canada-PR-statistics/src/components/AppBar.tsx",["97","98"],[],"import Link from \"next/link\";\nimport React from \"react\";\n\nexport const IconExternalLink = () => (\n    <svg className=\"w-3 h-3 text-gray-950 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 18 18\">\n        <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\" d=\"M15 11v4.833A1.166 1.166 0 0 1 13.833 17H2.167A1.167 1.167 0 0 1 1 15.833V4.167A1.166 1.166 0 0 1 2.167 3h4.618m4.447-2H17v5.768M9.111 8.889l7.778-7.778\" />\n    </svg>\n);\n\nexport default function AppBar({ children }: { children?: React.ReactNode }) {\n    const isLoading = false;\n    return (\n        <div className={\"p-2 font-semibold border shadow rounded-2xl flex h-20 justify-between w-full items-center text-black\"}>\n            <Link className=\"flex justify-center items-center overflow-hidden h-16\" href='/'>\n                <img className=\"overflow-hidden -ml-10\" src=\"/images/HD-wordmark-white.gif\" width={250} /> <h1 className=\"-ml-10 flex font-serif font-light justify-end items-end h-full mb-3 text-4xl \">PR Stats</h1>\n            </Link>\n            <div className=\"flex gap-x-10 flex-row\">\n                <Link href=\"/\" className=\"border-b-2   border-blue-600 p-3\" >Express Entry</Link>\n                <Link href=\"/pnp\" className=\" border-blue-700 p-3\" >Provincial Nominee </Link>\n            </div>\n            {children}\n\n            <div className=\"flex gap-x-8 justify-center items-center\">\n                <button onClick={() => alert(\"Coming soon!\")} className=\"border-b-2  shadow-red-100 hover:shadow-md hover:bg-red-300 hover:border-red-400 shadow-sm rounded-lg bg-red-200 border-red-300 p-4\">Subscribe</button>\n                {/* Action buttons */}\n                <a target=\"_blank\" className={\"text-blue-600 flex justify-center items-center gap-x-1 hover:text-blue-500\"}\n                    href=\"https://www.canada.ca/en/immigration-refugees-citizenship/corporate/mandate/policies-operational-instructions-agreements/ministerial-instructions/express-entry-rounds.html#wb-auto-4\"\n                >\n                    Data Source <IconExternalLink /></a>\n                <a target=\"_blank\" className={\" text-blue-600 bg-[#FFFFFF1F] flex gap-x-1 hover:text-blue-500 rounded-xl gap-2 py-4 px-[1.375rem] items-center\"}\n                    href=\"https://github.com/tmkasun/Canada-PR-statistics\"\n                ><svg className=\"w-6 h-6 text-gray-800 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M10 .333A9.911 9.911 0 0 0 6.866 19.65c.5.092.678-.215.678-.477 0-.237-.01-1.017-.014-1.845-2.757.6-3.338-1.169-3.338-1.169a2.627 2.627 0 0 0-1.1-1.451c-.9-.615.07-.6.07-.6a2.084 2.084 0 0 1 1.518 1.021 2.11 2.11 0 0 0 2.884.823c.044-.503.268-.973.63-1.325-2.2-.25-4.516-1.1-4.516-4.9A3.832 3.832 0 0 1 4.7 7.068a3.56 3.56 0 0 1 .095-2.623s.832-.266 2.726 1.016a9.409 9.409 0 0 1 4.962 0c1.89-1.282 2.717-1.016 2.717-1.016.366.83.402 1.768.1 2.623a3.827 3.827 0 0 1 1.02 2.659c0 3.807-2.319 4.644-4.525 4.889a2.366 2.366 0 0 1 .673 1.834c0 1.326-.012 2.394-.012 2.72 0 .263.18.572.681.475A9.911 9.911 0 0 0 10 .333Z\" clipRule=\"evenodd\" />\n                    </svg></a>\n            </div>\n        </div>\n    );\n}","/home/kasun/projects/Canada-PR-statistics/src/components/BarChart.tsx",["99"],[],"import { useEffect, useRef } from \"react\";\nimport * as echarts from \"echarts/core\";\n\nimport {\n    TitleComponent,\n    DatasetComponent,\n    TooltipComponent,\n    GridComponent,\n    LegendComponent\n} from \"echarts/components\";\nimport { BarChart } from \"echarts/charts\";\nimport { CanvasRenderer } from \"echarts/renderers\";\nimport { ECharts, EChartsOption, EChartsType } from \"echarts\";\n\necharts.use([\n    TitleComponent,\n    DatasetComponent,\n    TooltipComponent,\n    GridComponent,\n    LegendComponent,\n    BarChart,\n    CanvasRenderer\n]);\n\nconst REBarChart = (props: { id: string, options: EChartsOption }) => {\n    const chartRef = useRef<HTMLDivElement | null>(null);\n    const chartRefInst = useRef<ECharts | null>(null);\n    const { id, options } = props;\n    useEffect(() => {\n        if (chartRefInst.current) {\n            chartRefInst.current.setOption(options, true);\n        }\n    }, [options]);\n    useEffect(() => {\n        console.log(chartRef.current);\n        if (chartRef.current) {\n            const barChart =\n                echarts.getInstanceByDom(chartRef.current) ||\n                echarts.init(chartRef.current);\n            barChart.setOption(options, true);\n            chartRefInst.current = barChart as unknown as EChartsType;\n        }\n    }, []);\n    return (\n        <div id={id} ref={chartRef} style={{ width: \"100%\", height: \"80vh\" }} />\n    );\n};\n\nexport default REBarChart;\n","/home/kasun/projects/Canada-PR-statistics/src/components/DiffViewer.tsx",[],[],"/home/kasun/projects/Canada-PR-statistics/src/components/LineChart.tsx",["100"],[],"import React, { useEffect, useRef } from \"react\";\r\nimport * as echarts from \"echarts/core\";\r\nimport {\r\n  DatasetComponent,\r\n  GridComponent,\r\n  TitleComponent,\r\n  TooltipComponent,\r\n  LegendComponent,\r\n  ToolboxComponent\r\n} from \"echarts/components\";\r\nimport { LineChart } from \"echarts/charts\";\r\nimport { CanvasRenderer } from \"echarts/renderers\";\r\nimport { ECharts, EChartsOption, EChartsType } from \"echarts\";\r\n\r\necharts.use([\r\n  TitleComponent,\r\n  DatasetComponent,\r\n  TooltipComponent,\r\n  GridComponent,\r\n  LegendComponent,\r\n  LineChart,\r\n  CanvasRenderer,\r\n  ToolboxComponent\r\n]);\r\n\r\nconst REChart: React.FC<{ id: string, options: EChartsOption }> = (props) => {\r\n  const chartRef = useRef<HTMLDivElement | null>(null);\r\n  const chartRefInst = useRef<ECharts | null>(null);\r\n  const { id, options } = props;\r\n  useEffect(() => {\r\n    if (chartRefInst.current) {\r\n      chartRefInst.current.setOption(options, true);\r\n    }\r\n  }, [options]);\r\n  useEffect(() => {\r\n    console.log(chartRef.current);\r\n    if (chartRef.current) {\r\n      const lineChart =\r\n        echarts.getInstanceByDom(chartRef.current) ||\r\n        echarts.init(chartRef.current);\r\n      lineChart.setOption(options, true);\r\n      chartRefInst.current = lineChart as unknown as EChartsType;\r\n    }\r\n  }, []);\r\n  return (\r\n    <div id={id} ref={chartRef} style={{ width: \"100%\", height: \"80vh\" }} />\r\n  );\r\n};\r\n\r\nexport default REChart;\r\n","/home/kasun/projects/Canada-PR-statistics/src/components/ProgramCard.tsx",[],[],"/home/kasun/projects/Canada-PR-statistics/src/components/Selector.tsx",["101"],[],"import React, { useEffect, useRef, useState } from \"react\";\n\nexport interface ISelectData {\n    name: string;\n    key: string;\n}\n\nexport interface ISelector extends Omit<React.SelectHTMLAttributes<HTMLSelectElement>, \"onChange\"> {\n    onChange: (e: ISelectData) => void;\n    data: ISelectData[];\n    label: React.ReactNode;\n    marked?: string;\n}\n\nexport default function Selector(props: ISelector) {\n    const [isOpen, setIsOpen] = useState(false);\n    const { value, onChange, data = [], label, marked } = props;\n    const dropdownListRef = useRef<HTMLDivElement | null>(null);\n    const currentField = data.find((field) => field.key === value);\n    useEffect(() => {\n        function handleClickOutside(event: MouseEvent) {\n            if (dropdownListRef.current && !dropdownListRef.current.contains(event.target as Node)) {\n                setIsOpen(false);\n            }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n\n    }, []);\n    return (\n        <div className=\"flex grow justify-center items-center gap-x-2\">\n            <label id=\"listbox-label\" className=\"text-[#94A5B9] leading-5 font-normal\">{label}</label>\n            <div ref={dropdownListRef} className=\"relative grow w-3/4\">\n                <button onClick={(e) => { e.stopPropagation(); e.preventDefault(); setIsOpen(true); }} type=\"button\" className=\"relative cursor-pointer w-full rounded-md bg-white py-1.5 pl-3 pr-10 text-left text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 sm:text-sm sm:leading-6\" aria-haspopup=\"listbox\" aria-expanded=\"true\" aria-labelledby=\"listbox-label\">\n                    <span className=\"flex items-center\">\n                        <span className=\"block truncate text-[#020618] font-semibold leading-5\">{currentField?.name}</span>\n                    </span>\n                    <span className=\"pointer-events-none absolute inset-y-0 right-0 ml-3 flex items-center pr-2\">\n                        <svg className=\"h-5 w-5 text-gray-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                            <path fillRule=\"evenodd\" d=\"M10 3a.75.75 0 01.55.24l3.25 3.5a.75.75 0 11-1.1 1.02L10 4.852 7.3 7.76a.75.75 0 01-1.1-1.02l3.25-3.5A.75.75 0 0110 3zm-3.76 9.2a.75.75 0 011.06.04l2.7 2.908 2.7-2.908a.75.75 0 111.1 1.02l-3.25 3.5a.75.75 0 01-1.1 0l-3.25-3.5a.75.75 0 01.04-1.06z\" clipRule=\"evenodd\" />\n                        </svg>\n                    </span>\n                </button>\n                <ul className={`absolute z-10 mt-1 ${!isOpen && \"hidden\"} w-full transition ease-in duration-100 max-h-56 overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm`} tabIndex={-1} role=\"listbox\" aria-labelledby=\"listbox-label\" aria-activedescendant=\"listbox-option-3\">\n                    {data.map(({ name, key }) => (\n                        <li key={key} onClick={() => { onChange({ key, name }); setIsOpen(false); }} className=\"text-gray-900 flex cursor-pointer hover:bg-gray-50 relative select-none py-2 pl-3 pr-9\" id=\"listbox-option-0\" role=\"option\">\n\n                            <div className=\"flex items-center w-full\">\n                                <span className=\"font-normal block truncate\">\n                                    {\n                                        marked && marked === key && (\n                                            <sup className=\"text-lg p-0 text-red-600\">\n                                                *\n                                            </sup>\n                                        )\n                                    }\n                                    {name}\n                                </span>\n                            </div>\n\n                            {currentField?.key === key && (\n                                <span className=\"text-indigo-600 absolute inset-y-0 right-0 flex items-center pr-4\">\n                                    <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                                        <path fillRule=\"evenodd\" d=\"M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z\" clipRule=\"evenodd\" />\n                                    </svg>\n                                </span>\n                            )}\n                        </li>\n                    ))}\n\n                </ul>\n            </div>\n        </div>\n    );\n}","/home/kasun/projects/Canada-PR-statistics/src/components/Statistics.tsx",[],[],"/home/kasun/projects/Canada-PR-statistics/src/components/StatsCard.tsx",[],[],"/home/kasun/projects/Canada-PR-statistics/src/data/api.tsx",["102"],[],"import { useEffect, useState } from \"react\";\r\nimport mockData from \"./mockData\";\r\nimport { IIRCCData } from \"./consts\";\r\n\r\nexport const clearAndParseNumber = (numberInString: string) => {\r\n  let parsedNumber;\r\n \r\n  try {\r\n    parsedNumber = parseInt(numberInString.replace(/,/g, \"\"));\r\n  } catch (error) {\r\n    console.error(`Error while parsing ${numberInString}`);\r\n    console.error(error);\r\n  }\r\n  return parsedNumber;\r\n};\r\nexport const useIRCCData = (isMocked=false) => {\r\n  const [data, setData] = useState<null| IIRCCData>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let isStale = false;\r\n    (async () => {\r\n      setIsLoading(true);\r\n      if(isMocked) {\r\n        return await new Promise((r) => {\r\n          setTimeout(() => {\r\n            setData(mockData as any);\r\n            setIsLoading(false);\r\n          }, 2000);\r\n        });\r\n      }\r\n      const res = await fetch(\r\n        \"https://www.canada.ca/content/dam/ircc/documents/json/ee_rounds_123_en.json\"\r\n      );\r\n      const data = await res.json();\r\n      if (!isStale) {\r\n        setData(data);\r\n      }\r\n      setIsLoading(false);\r\n      return () => {\r\n        isStale = true;\r\n      };\r\n    })();\r\n  }, []);\r\n  return { data, isLoading };\r\n};\r\n\r\nexport default useIRCCData;\r\n","/home/kasun/projects/Canada-PR-statistics/src/data/chartOptions.ts",[],[],"/home/kasun/projects/Canada-PR-statistics/src/data/consts.ts",[],[],"/home/kasun/projects/Canada-PR-statistics/src/data/mockData.ts",[],[],"/home/kasun/projects/Canada-PR-statistics/src/layouts/root.tsx",[],[],"/home/kasun/projects/Canada-PR-statistics/src/pages/_app.tsx",[],[],"/home/kasun/projects/Canada-PR-statistics/src/pages/index.tsx",[],[],"/home/kasun/projects/Canada-PR-statistics/src/pages/products/[productID].tsx",[],[],"/home/kasun/projects/Canada-PR-statistics/src/utils/utils.ts",[],[],{"ruleId":"103","severity":1,"message":"104","line":15,"column":17,"nodeType":"105","endLine":15,"endColumn":107},{"ruleId":"106","severity":1,"message":"107","line":15,"column":17,"nodeType":"105","endLine":15,"endColumn":107},{"ruleId":"108","severity":1,"message":"109","line":43,"column":8,"nodeType":"110","endLine":43,"endColumn":10,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"109","line":44,"column":6,"nodeType":"110","endLine":44,"endColumn":8,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":48,"column":223,"nodeType":"115","endLine":48,"endColumn":236},{"ruleId":"108","severity":1,"message":"116","line":44,"column":6,"nodeType":"110","endLine":44,"endColumn":8,"suggestions":"117"},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.","ArrayExpression",["118"],["119"],"jsx-a11y/role-has-required-aria-props","Elements with the ARIA role \"option\" must have the following attributes defined: aria-selected","JSXAttribute","React Hook useEffect has a missing dependency: 'isMocked'. Either include it or remove the dependency array.",["120"],{"desc":"121","fix":"122"},{"desc":"121","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [options]",{"range":"126","text":"127"},{"range":"128","text":"127"},"Update the dependencies array to be: [isMocked]",{"range":"129","text":"130"},[1274,1276],"[options]",[1277,1279],[1223,1225],"[isMocked]"]